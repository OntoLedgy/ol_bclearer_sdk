name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  FORCE_JAVASCRIPT_ACTIONS_TO_NODE20: true


jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    # Step 1: Check out the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Python with Poetry
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Ensure Poetry Cache Directory Exists
      run: |
        mkdir -p ~/.cache/pypoetry

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-${{ matrix.python-version }}



    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        poetry install

    - name: Test CI Trigger
      run: echo "triggered successfully checked out"

#    # Step 4: Run linters and code formatters (ruff)
#    - name: Lint with ruff
#      run: |
#        poetry run ruff .
#
#    # Step 5: Run tests
#    - name: Run tests with pytest
#      run: |
#        poetry run pytest
#
#  # Optional step: Deploy to PyPI on tag release
#  publish:
#    runs-on: ubuntu-latest
#    if: github.ref_type == 'tag'
#    needs: test
#
#    steps:
#    - name: Checkout repository
#      uses: actions/checkout@v3
#
#    - name: Set up Python
#      uses: actions/setup-python@v4
#      with:
#        python-version: 3.x
#
#    - name: Install Poetry
#      run: |
#        curl -sSL https://install.python-poetry.org | python3 -
#
#    - name: Install dependencies
#      run: |
#        poetry install --no-dev
#
#    - name: Publish to PyPI
#      env:
#        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
#      run: |
#        poetry publish --build
